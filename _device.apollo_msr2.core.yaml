api:
  services:
    - service: play_buzzer
      variables:
        song_str: string
      then:
        - rtttl.play:
            rtttl: !lambda 'return song_str;'

    - service: calibrate_co2_value
      variables:
        co2_ppm: float
      then:
        - scd4x.perform_forced_calibration:
            value: !lambda 'return co2_ppm;'
            id: scd40

number:
  - platform: template
    name: "apollo/${path}/dps310/temperature_offset"
    id: dps310_temperature_offset
    restore_value: true
    initial_value: 14.54
    min_value: -70.0
    max_value: 70.0
    entity_category: "CONFIG"
    unit_of_measurement: "Â°C"
    optimistic: true
    update_interval: never
    step: 0.1
    mode: box
    disabled_by_default: true

output:
  - platform: ledc
    pin: GPIO10
    id: buzzer
rtttl:
 output: buzzer

binary_sensor:
  - platform: status
    id: ink_ha_connected
    name: "apollo/${path}/connected"

sensor:
  - platform: internal_temperature
    name: "apollo/${path}/internal_temperature"
    id: sys_esp_temperature
    filters:
        - lambda: |-
            static float last_reported_value = 0.0;
            float current_value = x;

            // Check if the reduce_db_reporting switch is on
            if (id(reduce_db_reporting).state) {
              // Apply delta filter: only report if the value has changed by 2 or more
              if (abs(current_value - last_reported_value) >= 5.0) {
                last_reported_value = current_value;  // Update the last reported value
                return current_value;
              } else {
                // Return the last reported value without updating if change is less than 2
                return {};  // Discard the update
              }
            } else {
              // If reduce_db_reporting is off, report the current value normally
              last_reported_value = current_value;
              return current_value;
            }

  - platform: uptime
    name: "apollo/${path}/uptime"
    id: sys_uptime
    update_interval: 60s

  - platform: wifi_signal
    name: "apollo/${path}/wifi_rssi"
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"

  - platform: scd4x
    id: scd40
    co2:
      name: "co2/${path}"
      id: "co2"
    automatic_self_calibration: false
    update_interval: 60s
    measurement_mode: "periodic"
    i2c_id: bus_a
    ambient_pressure_compensation_source: dps310pressure
  
  - platform: ltr390
    id: ltr_390
    light:
      name: "apollo/${path}/ltr390/light"
      id: ltr390light
      filters:
        - lambda: |-
            static float last_reported_value = 0.0;
            float current_value = x;

            // Check if the reduce_db_reporting switch is on
            if (id(reduce_db_reporting).state) {
              // Apply delta filter: only report if the value has changed by 2 or more
              if (abs(current_value - last_reported_value) >= 20.0) {
                last_reported_value = current_value;  // Update the last reported value
                return current_value;
              } else {
                // Return the last reported value without updating if change is less than 2
                return {};  // Discard the update
              }
            } else {
              // If reduce_db_reporting is off, report the current value normally
              last_reported_value = current_value;
              return current_value;
            }
    uv_index:
      name: "apollo/${path}/ltr390/uv"
      id: ltr390uvindex
      filters:
        - lambda: |-
            static float last_reported_value = 0.0;
            float current_value = x;

            // Check if the reduce_db_reporting switch is on
            if (id(reduce_db_reporting).state) {
              // Apply delta filter: only report if the value has changed by 2 or more
              if (abs(current_value - last_reported_value) >= 20.0) {
                last_reported_value = current_value;  // Update the last reported value
                return current_value;
              } else {
                // Return the last reported value without updating if change is less than 2
                return {};  // Discard the update
              }
            } else {
              // If reduce_db_reporting is off, report the current value normally
              last_reported_value = current_value;
              return current_value;
            }

  - platform: dps310
    id: dps_310
    pressure:
      name: "apollo/${path}/dps310/pressure"
      id: dps310pressure
      filters:
        - lambda: |-
            static float last_reported_value = 0.0;
            float current_value = x;

            // Check if the reduce_db_reporting switch is on
            if (id(reduce_db_reporting).state) {
              // Apply delta filter: only report if the value has changed by 2 or more
              if (abs(current_value - last_reported_value) >= 5.0) {
                last_reported_value = current_value;  // Update the last reported value
                return current_value;
              } else {
                // Return the last reported value without updating if change is less than 2
                return {};  // Discard the update
              }
            } else {
              // If reduce_db_reporting is off, report the current value normally
              last_reported_value = current_value;
              return current_value;
            }
    temperature:
      name: "apollo/${path}/dps310/temperature"
      id: dps310temperature
      filters:
        - lambda: return x - id(dps310_temperature_offset).state;
    update_interval: 30s
    i2c_id: bus_a

light:
  - platform: esp32_rmt_led_strip
    id: rgb_light
    name: "apollo/${path}/light"
    pin: GPIO3
    default_transition_length: 0s
    chipset: WS2812
    num_leds: 3
    rgb_order: grb
    effects:
      - pulse:
          name: "Slow Pulse"
          transition_length: 1000ms
          update_interval: 1000ms
          min_brightness: 50%
          max_brightness: 100%
      - pulse:
          name: "Fast Pulse"
          transition_length: 100ms
          update_interval: 100ms
          min_brightness: 50%
          max_brightness: 100%

button:
  - platform: restart
    icon: mdi:power-cycle
    name: "apollo/${path}/reboot"

  - platform: factory_reset
    disabled_by_default: true
    name: "apollo/${path}/factory_reset"
    id: factory_reset_all

  - platform: template
    name: "apollo/${path}/scd40/calibrate_to_420"
    id: set_SCD40_calibrate
    on_press:
      - scd4x.perform_forced_calibration:
          value: 420
          id: scd40
    disabled_by_default: true
    entity_category: "config"

switch:
  - platform: factory_reset
    id: factory_reset_switch
    internal: true
  - platform: template
    name: "apollo/${path}/reduce_reporting"
    id: reduce_db_reporting
    icon: mdi:database
    restore_mode: RESTORE_DEFAULT_OFF
    optimistic: true
    entity_category: "config"
